openapi: 3.0.3
info:
  title: WSO2 Identity Server - Identity Verification API definition
  description: |-
    This document specifies an **Identity Verification RESTful API** for **WSO2 Identity Server**. The APIs provide the capability to verify an identity and retrive the verification status of identities. Moreover APIs are available to add/update/delete/patch identity verification providers.
  termsOfService: http://swagger.io/terms/
  contact:
    name: WSO2
    url: 'http://wso2.com/products/identity-server/'
    email: architecture@wso2.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
  - url: 'https://{server-url}/t/{tenant-domain}/api/server/v1/idv'
    variables:
      tenant-domain:
        default: "carbon.super"
      server-url:
        default: "localhost:9443"
security:
  - OAuth2: []
  - BasicAuth: []
tags:
  - name: Verification
    description: Identity Verification API
  - name: Identity Verification Providers
    description: Identity Verification Provider API
paths:
  /:
    post:
      tags:
        - Verification
      summary: Verify an Identity
      description: This API provides the capability to verify a user with the configured verification required attributes
      operationId: verifyIdentity
      requestBody:
        description: Verify an identity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verificationPostRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/initVerificationResponse'
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/verificationPostResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{user-id}:
    get:
      tags:
        - Verification
      summary: Get the verification details of a user
      description: This API provides the capability to retrive the verification details of a user
      operationId: getIdentityVerificationInfo
      parameters:
        - name: user-id
          in: path
          description: user id of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/verificationGetResponse'
        '400':
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /{user-id}/claim/{claim-id}:
    get:
      tags:
        - Verification
      summary: Get the verification metadata of a claim
      description: This API provides the capability to retrive the verification metadata of a user claim
      operationId: getVerificationClaimMetadata
      parameters:
        - name: user-id
          in: path
          description: user id of the user
          required: true
          schema:
            type: string
        - name: claim-id
          in: path
          description: Claim that needs to retrieve verification metadata
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/verificationClaimResponse'
        '400':
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /providers:
    get:
      tags:
        - Identity Verification Providers
      summary: |
        List identity verification providers.
      description: >
        This API provides the capability to retrieve the list of identity
        verification providers.<br>
        <b>Permission required:</b> <br>
            * /permission/admin/manage/identity/idvmgt/view <br>
        <b>Scope required:</b> <br>
            * internal_idv_view
      operationId: getIdVProviders
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdVProviderListResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Identity Verification Providers
      summary: |
        Add a new identity verification providers.
      description: ""
      operationId: addIdVProvider
      responses:
        '201':
          description: Successful response
          headers:
            Location:
              description: Location of the newly created identity provider.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdVProviderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdVProviderRequest'
        description: This represents the identity provider to be created.
        required: true
  /providers/{idv-provider-id}:
    get:
      tags:
        - Identity Verification Providers
      summary: |
        Retrieve identity verification provider by identity verification provider's ID
      description: >
        This API provides the capability to retrieve the identity verification provider
        details by using its ID. 
        <b>Permission required:</b> <br>
            * /permission/admin/manage/identity/idvmgt/view <br>
        <b>Scope required:</b> <br>
            * internal_idv_view
      operationId: getIdVProvider
      parameters:
        - name: idv-provider-id
          in: path
          description: ID of the identity verification provider.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdVProviderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Identity Verification Providers
      summary: >
        Update an identity verification provider.
      description: >
        This API provides the capability to update an identity verification provider <br>
        <b>Permission required:</b> <br>
            * /permission/admin/manage/identity/idvmgt/update <br>
        <b>Scope required:</b> <br>
            * internal_idv_update
      operationId: updateIdVProviders
      parameters:
        - name: idv-provider-id
          in: path
          description: ID of the identity verification provider.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          headers:
            Location:
              description: Location of the updated identity provider.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdVProviderResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdVProviderRequest'
        required: true
    delete:
      tags:
        - Identity Verification Providers
      summary: |
        Delete an identity verification provider by using the identity provider's ID.
      description: >
        This API provides the capability to delete an identity verification provider by
        giving its ID. <br>
        <b>Permission required:</b> <br>
            * /permission/admin/manage/identity/idvmgt/delete <br>
        <b>Scope required:</b> <br>
            * internal_idv_delete
      operationId: deleteIdVProvider
      parameters:
        - name: idv-provider-id
          in: path
          description: ID of the identity verification provider
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    limitQueryParam:
      in: query
      name: limit
      required: false
      description: |
        Maximum number of records to return.
      schema:
        type: integer
        format: int32
    offsetQueryParam:
      in: query
      name: offset
      required: false
      description: |
        Number of records to skip for pagination.
      schema:
        type: integer
        format: int32
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
    verificationPostResponse:
      required:
        - identityVerificationProvider
      type: object
      properties:
        username:
          type: string
          example: username
        identityVerificationProvider:
          type: string
          example: evidentID
        claims:
          type: array
          items:
            $ref: '#/components/schemas/verifiedAttributes'
    verificationGetResponse:
      type: object
      properties:
        userId:
          type: string
          example: "123e4567-e89b-12d3-a456-556642440000"
        claims:
          type: array
          items:
            $ref: '#/components/schemas/verificationClaimResponse'
    verificationClaimResponse:
      type: object
      properties:
        id:
          type: string
          example: aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ
          readOnly: true
        uri:
          type: string
          example: 'http://wso2.org/claims/country'
        value:
          type: string
          example: 'Sri Lanka'
        status:
          type: string
          example: Verified
        claimMetadata:
          type: object
          example: '{"source": "evidentID", "verifiedAt": "2020-10-10T12:00:00.000Z", "trackingId": "123e4567-e89b-12d3-a456-556642440000" }'
    verificationPostRequest:
      required:
        - identityVerificationProvider
      type: object
      properties:
        username:
          type: string
          example: username
        identityVerificationProvider:
          type: string
          example: evidentID
        claims:
          type: array
          items:
            $ref: '#/components/schemas/attributes'
    attributes:
      type: object
      properties:
        "http://wso2.org/claims/username":
          type: string
        "http://wso2.org/claims/address":
          type: string
    verifiedAttributes:
      type: object
      properties:
        "claim":
          type: string
          example: "http://wso2.org/claims/country"
        "value":
          type: string
          example: "Sri Lanka"
        "status":
          type: string
          example: "Verified"
    initVerificationResponse:
      required:
        - identityVerificationProvider
      type: object
      properties:
        username:
          type: string
          example: username
        identityVerificationProvider:
          type: string
          example: evidentID
    IdVProviderListResponse:
      type: object
      properties:
        totalResults:
          type: integer
          example: 10
        startIndex:
          type: integer
          example: 1
        count:
          type: integer
          example: 10
        identityVerificationProviders:
          type: array
          items:
            $ref: '#/components/schemas/IdVProviderResponse'
    IdVProviderResponse:
      type: object
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-556642440000
        Name:
          type: string
          example: EvidentID
        displayName:
          type: string
          example: EvidentID
        description:
          type: string
          example: identity verification provider
        claims:
          type: array
          items:
            $ref: '#/components/schemas/verificationclaim'
        configProperties:
          type: array
          items:
            $ref: '#/components/schemas/ConfigProperty'
    IdVProviderRequest:
      type: object
      properties:
        Name:
          type: string
          example: EvidentID
        displayName:
          type: string
          example: EvidentID
        description:
          type: string
          example: identity verification provider
        claims:
          type: array
          items:
            $ref: '#/components/schemas/verificationclaim'
        configProperties:
          type: array
          items:
            $ref: '#/components/schemas/ConfigProperty'
    ConfigProperty:
      type: object
      properties:
        key:
          type: string
          example: somePropertyKey
        value:
          type: string
          example: somePropertyValue
    verificationclaim:
      type: object
      properties:
        id:
          type: string
          example: aHR0cDovL3dzbzIub3JnL2NsYWltcy91c2VybmFtZQ
          readOnly: true
        uri:
          type: string
          example: 'http://wso2.org/claims/username'
        displayName:
          type: string
          example: Username
          readOnly: true
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://localhost:9443/oauth2/authorize'
          tokenUrl: 'https://localhost:9443/oauth2/token'
          scopes: {}